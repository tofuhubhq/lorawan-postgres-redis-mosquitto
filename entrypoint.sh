#!/bin/bash

set -e

echo "🧠 Generating terraform.tfvars from injected environment variables..."

# Start fresh
echo "# Auto-generated by entrypoint.sh" > terraform.tfvars

# List of expected variable names (without quotes or extra spacing)
vars=(
  do_access_token
  do_domain
  do_project_name
  do_project_description
  do_vpc_region
  do_db_name
  do_db_engine
  do_db_version
  do_db_size
  do_db_region
  do_db_node_count
  do_mosquitto_region
  do_mosquitto_size
  do_mosquitto_image
  do_mosquitto_username
  do_mosquitto_password
  do_chirpstack_droplet_count
  do_chirpstack_droplet_size
  do_chirpstack_droplet_image
  do_chirpstack_droplet_region
  do_ssh_key_name
  redis_droplet_size
  redis_droplet_image
  redis_region
  redis_password
)

# Loop through the list and write each to the tfvars file
for var in "${vars[@]}"; do
  val="${!var}"

  if [[ -n "$val" ]]; then
    # If the value looks like a number (e.g., 1), print as-is
    if [[ "$val" =~ ^[0-9]+$ ]]; then
      echo "$var = $val" >> terraform.tfvars
    else
      echo "$var = \"$val\"" >> terraform.tfvars
    fi
  else
    echo "⚠️  Warning: $var is not set in the environment"
  fi
done

echo "✅ terraform.tfvars generated:"
cat terraform.tfvars

echo "🚀 Running OpenTofu..."
tofu init -backend-config="path=/app/state/terraform.tfstate"
tofu apply -state=/app/state/terraform.tfstate -auto-approve